<?xml version="1.0" encoding="UTF-8"?>
<microprocessor name="Remote Controller" description="A controller used for remote controls" width="2" length="2" id_counter="16" id_counter_node="4" sym1="384" sym2="384" sym3="2064" sym4="9252" sym5="5064" sym6="18450" sym7="10212" sym8="36873" sym9="20466" sym10="8196" sym11="40953" sym12="16386" sym13="16380" sym14="32769" sym15="32766">
	<nodes>
		<n id="1" component_id="2">
			<node label="Radio input" mode="1" type="5" description="The input signal to be processed."/>
		</n>
		<n id="2" component_id="7">
			<node label="W" description="The input signal to be processed.">
				<position z="1"/>
			</node>
		</n>
		<n id="3" component_id="10">
			<node label="S" description="The input signal to be processed.">
				<position x="1"/>
			</node>
		</n>
		<n id="4" component_id="16">
			<node label="Radio Frequency" type="1" description="The input signal to be processed.">
				<position x="1" z="1"/>
			</node>
		</n>
	</nodes>
	<group>
		<data>
			<inputs/>
			<outputs/>
		</data>
		<components>
			<c type="56">
				<object id="8" script="function onTick()
	verticalInput = input.getNumber(2)

	output.setBool(1, false)
	output.setBool(2, false)
	
	if verticalInput &gt; 0.1 then
		output.setBool(1, true)
	elseif verticalInput &lt; -0.1 then
		output.setBool(2, true)
	end
	
	output.setNumber(1, 1)
end">
					<pos x="2.5" y="-0.5"/>
					<in1 component_id="2">
						<v/>
					</in1>
					<in2>
						<v/>
					</in2>
					<out1>
						<v 01="1"/>
					</out1>
					<out2>
						<v/>
					</out2>
				</object>
			</c>
			<c type="29">
				<object id="11">
					<pos x="3.75" y="-0.25"/>
					<in1 component_id="8">
						<v 01="1"/>
					</in1>
					<out1/>
				</object>
			</c>
			<c type="29">
				<object id="12" i="1">
					<pos x="3.75" y="-0.75"/>
					<in1 component_id="8">
						<v 01="1"/>
					</in1>
					<out1/>
				</object>
			</c>
			<c type="31">
				<object id="13">
					<pos x="3.75" y="-1.25"/>
					<in1 component_id="8">
						<v 01="1"/>
					</in1>
					<out1 v="1"/>
				</object>
			</c>
		</components>
		<components_bridge>
			<c type="4">
				<object id="2">
					<pos x="1" y="-0.25"/>
					<in1>
						<v/>
					</in1>
					<out1>
						<v/>
					</out1>
				</object>
			</c>
			<c type="1">
				<object id="7">
					<pos x="5.25" y="-0.25"/>
					<in1 component_id="11"/>
					<out1/>
				</object>
			</c>
			<c type="1">
				<object id="10">
					<pos x="5.25" y="-0.75"/>
					<in1 component_id="12"/>
					<out1/>
				</object>
			</c>
			<c type="3">
				<object id="16">
					<pos x="5.25" y="-1.25"/>
					<in1 component_id="13" v="1"/>
					<out1 v="1"/>
				</object>
			</c>
		</components_bridge>
		<groups/>
		<component_states>
			<c0 id="8" script="function onTick()
	verticalInput = input.getNumber(2)

	output.setBool(1, false)
	output.setBool(2, false)
	
	if verticalInput &gt; 0.1 then
		output.setBool(1, true)
	elseif verticalInput &lt; -0.1 then
		output.setBool(2, true)
	end
	
	output.setNumber(1, 1)
end">
				<pos x="2.5" y="-0.5"/>
				<in1 component_id="2">
					<v/>
				</in1>
				<in2>
					<v/>
				</in2>
				<out1>
					<v 01="1"/>
				</out1>
				<out2>
					<v/>
				</out2>
			</c0>
			<c1 id="11">
				<pos x="3.75" y="-0.25"/>
				<in1 component_id="8">
					<v 01="1"/>
				</in1>
				<out1/>
			</c1>
			<c2 id="12" i="1">
				<pos x="3.75" y="-0.75"/>
				<in1 component_id="8">
					<v 01="1"/>
				</in1>
				<out1/>
			</c2>
			<c3 id="13">
				<pos x="3.75" y="-1.25"/>
				<in1 component_id="8">
					<v 01="1"/>
				</in1>
				<out1 v="1"/>
			</c3>
		</component_states>
		<component_bridge_states>
			<c0 id="2">
				<pos x="1" y="-0.25"/>
				<in1>
					<v/>
				</in1>
				<out1>
					<v/>
				</out1>
			</c0>
			<c1 id="7">
				<pos x="5.25" y="-0.25"/>
				<in1 component_id="11"/>
				<out1/>
			</c1>
			<c2 id="10">
				<pos x="5.25" y="-0.75"/>
				<in1 component_id="12"/>
				<out1/>
			</c2>
			<c3 id="16">
				<pos x="5.25" y="-1.25"/>
				<in1 component_id="13" v="1"/>
				<out1 v="1"/>
			</c3>
		</component_bridge_states>
		<group_states/>
	</group>
</microprocessor>

